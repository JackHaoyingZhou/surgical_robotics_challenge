{
    "py/object": "__main__.PSMKinematicSolver",
    "num_links": 7,
    "tool_id": 400006,
    "L_rcc": 0.4389,
    "L_tool": 0.416,
    "L_pitch2yaw": 0.009,
    "L_yaw2ctrlpnt": 0.0,
    "L_tool2rcm_offset": 0.0229,
    "kinematics": [
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": 1.5707963267948966,
            "a": 0,
            "theta": 0,
            "d": 0,
            "offset": 1.5707963267948966,
            "joint_type": {
                "py/reduce": [
                    {
                        "py/type": "surgical_robotics_challenge.kinematics.DH.JointType"
                    },
                    {
                        "py/tuple": [
                            0
                        ]
                    }
                ]
            },
            "convention": {
                "py/reduce": [
                    {
                        "py/type": "surgical_robotics_challenge.kinematics.DH.Convention"
                    },
                    {
                        "py/tuple": [
                            1
                        ]
                    }
                ]
            }
        },
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": -1.5707963267948966,
            "a": 0,
            "theta": 0,
            "d": 0,
            "offset": -1.5707963267948966,
            "joint_type": {
                "py/id": 3
            },
            "convention": {
                "py/id": 4
            }
        },
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": 1.5707963267948966,
            "a": 0,
            "theta": 0,
            "d": 0,
            "offset": -0.4389,
            "joint_type": {
                "py/reduce": [
                    {
                        "py/type": "surgical_robotics_challenge.kinematics.DH.JointType"
                    },
                    {
                        "py/tuple": [
                            1
                        ]
                    }
                ]
            },
            "convention": {
                "py/id": 4
            }
        },
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": 0,
            "a": 0,
            "theta": 0,
            "d": 0.416,
            "offset": 0,
            "joint_type": {
                "py/id": 3
            },
            "convention": {
                "py/id": 4
            }
        },
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": -1.5707963267948966,
            "a": 0,
            "theta": 0,
            "d": 0,
            "offset": -1.5707963267948966,
            "joint_type": {
                "py/id": 3
            },
            "convention": {
                "py/id": 4
            }
        },
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": -1.5707963267948966,
            "a": 0.009,
            "theta": 0,
            "d": 0,
            "offset": -1.5707963267948966,
            "joint_type": {
                "py/id": 3
            },
            "convention": {
                "py/id": 4
            }
        },
        {
            "py/object": "surgical_robotics_challenge.kinematics.DH.DH",
            "alpha": -1.5707963267948966,
            "a": 0,
            "theta": 0,
            "d": 0.0,
            "offset": 1.5707963267948966,
            "joint_type": {
                "py/id": 3
            },
            "convention": {
                "py/id": 4
            }
        }
    ],
    "lower_limits": [
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/reduce": [
                                {
                                    "py/type": "numpy.dtype"
                                },
                                {
                                    "py/tuple": [
                                        "f8",
                                        false,
                                        true
                                    ]
                                },
                                {
                                    "py/tuple": [
                                        3,
                                        "<",
                                        null,
                                        null,
                                        null,
                                        -1,
                                        -1,
                                        0
                                    ]
                                }
                            ]
                        },
                        {
                            "py/b64": "EZYJfhmu+b8="
                        }
                    ]
                }
            ]
        },
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "ZXMtOFLB8L8="
                        }
                    ]
                }
            ]
        },
        -0.0,
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "9PLskUJvCMA="
                        }
                    ]
                }
            ]
        },
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "GC1EVPsh+b8="
                        }
                    ]
                }
            ]
        },
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "0LiVz4m8978="
                        }
                    ]
                }
            ]
        }
    ],
    "upper_limits": [
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "EZYJfhmu+T8="
                        }
                    ]
                }
            ]
        },
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "ZXMtOFLB8D8="
                        }
                    ]
                }
            ]
        },
        0.24,
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "9PLskUJvCEA="
                        }
                    ]
                }
            ]
        },
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "GC1EVPsh+T8="
                        }
                    ]
                }
            ]
        },
        {
            "py/reduce": [
                {
                    "py/function": "numpy.core.multiarray.scalar"
                },
                {
                    "py/tuple": [
                        {
                            "py/id": 14
                        },
                        {
                            "py/b64": "0LiVz4m89z8="
                        }
                    ]
                }
            ]
        }
    ]
}